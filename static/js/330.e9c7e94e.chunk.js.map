{"version":3,"file":"static/js/330.e9c7e94e.chunk.js","mappings":"+JACA,SAAgB,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,0B,sBCGjN,MAcA,EAdoBA,IAEhB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAEC,OAAS,IAAMD,EAAEE,OAAOC,UACtCL,EAAAA,EAAAA,KAACM,EAAAA,GAAO,CAACC,GAAIT,EAAMU,gBAAiBN,EAAEO,WAAWJ,SAC5CR,EAAMa,QAET,ECJd,EANiBb,IAETG,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAEC,OAAOE,SAAER,EAAMa,O,wCCIzC,MAqCMC,EAAkBd,IAGhBG,EAAAA,EAAAA,KAAA,OAAAK,UACIL,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CACDC,SAAUhB,EAAMiB,aAChBC,OAAQC,IAAA,IAAC,aAAEC,GAAcD,EAAA,OACrBE,EAAAA,EAAAA,MAAA,QAAML,SAAUI,EAAaZ,SAAA,EACzBL,EAAAA,EAAAA,KAAA,OAAAK,UACIL,EAAAA,EAAAA,KAACmB,EAAAA,GAAK,CAACT,KAAK,iBACJU,UAAWC,EAAAA,GACXC,YAAY,qBACZC,SAAUC,EAAAA,QAItBxB,EAAAA,EAAAA,KAAA,OAAAK,UACIL,EAAAA,EAAAA,KAAA,UAAQyB,KAAK,SAASC,QAAST,EAAaZ,SAAC,aAO9C,MAO3B,EApEiBR,IACb,IAAI8B,EAAQ9B,EAAM+B,WAEdC,EAAkBF,EAAMG,WAAWC,KAAIC,IAAKhC,EAAAA,EAAAA,KAACiC,EAAU,CAACvB,KAAMsB,EAAEtB,KAAMX,GAAIiC,EAAEjC,IAASiC,EAAEjC,MAEvFmC,EAAmBP,EAAMQ,YAAYJ,KAAIK,IAAKpC,EAAAA,EAAAA,KAACqC,EAAO,CAAC3B,KAAM0B,EAAEE,QAASvC,GAAIqC,EAAErC,IAASqC,EAAErC,MAY7F,OAAKF,EAAM0C,QAKPrB,EAAAA,EAAAA,MAAA,OAAKjB,UAAWC,EAAEsC,QAAQnC,SAAA,EACtBL,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAEuC,aAAapC,SAC1BwB,KAEL7B,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAEwC,SAASrC,UACvBL,EAAAA,EAAAA,KAAA,OAAAK,SACK6B,OAITlC,EAAAA,EAAAA,KAACW,EAAc,CAACG,aAzBR6B,IAGZ9C,EAAM+C,YAAYD,EAAOE,eAAe,EAsBIA,eAAgBlB,EAAMkB,qBAd3D7C,EAAAA,EAAAA,KAAC8C,EAAAA,GAAQ,CAACvC,GAAI,UAef,ECpBd,SAAewC,E,OAAAA,KACXC,EAAAA,EAAAA,KAhBmBrB,IAEZ,CACHC,WAAYD,EAAMC,eAIAqB,IACf,CACHL,YAAcC,IACVI,GAASC,EAAAA,EAAAA,GAAmBL,GAAgB,MAOpDM,EAAAA,EAFJ,CAEsBC,E","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Messages/Messages.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__oe96H\",\"dialogsItems\":\"Dialogs_dialogsItems__zeEWD\",\"active\":\"Dialogs_active__t8cjl\",\"dialog\":\"Dialogs_dialog__htSTl\",\"messages\":\"Dialogs_messages__Cg2l+\",\"message\":\"Dialogs_message__ZEWo0\"};","import React from 'react';\nimport s from './../Dialogs.module.css'\nimport { NavLink } from 'react-router-dom';\n\nconst DialogItem = (props) => {\n\n    let path = \"/dialogs/\" + props.id\n\n    return (\n        <div className={s.dialog + ' ' + s.active}>\n            <NavLink to={path} activeClassName={s.activeLink}>\n                {props.name}\n            </NavLink>\n        </div>\n    )\n}\n\n\nexport default DialogItem","import React from 'react';\nimport s from './../Dialogs.module.css'\n\nconst Message = (props) => {\n    return (\n        <div className={s.dialog}>{props.name}</div>\n    )\n}\n\nexport default Message","import React from 'react';\nimport s from './Dialogs.module.css'\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Messages/Messages';\nimport { Navigate } from 'react-router-dom';\nimport { Form, Field } from 'react-final-form'\nimport { Textarea } from '../common/FormsControls/FormsControls'\nimport { validateField } from '../../utils/validations/validation'\n\nconst Dialogs = (props) => {\n    let state = props.dialogPage\n\n    let dialogsElements = state.dialogData.map(d => <DialogItem name={d.name} id={d.id} key={d.id} />)\n\n    let messagesElements = state.messageData.map(m => <Message name={m.message} id={m.id} key={m.id} />)\n\n    let onSubmit = (values) => {\n        // debugger\n        // alert(values.newMessageBody)\n        props.sendMessage(values.newMessageBody);\n    }\n\n    // const onSubmit = async values => {\n    //     alert(JSON.stringify(values, 0, 2))\n    //   }\n\n    if (!props.isAuth) {\n        return <Navigate to={'/login'} />\n    }\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {dialogsElements}\n            </div>\n            <div className={s.messages}>\n                <div>\n                    {messagesElements}\n                </div>\n            </div>\n\n            <AddMessageForm onSubmitForm={onSubmit} newMessageBody={state.newMessageBody} />\n        </div>\n    )\n}\n\nconst AddMessageForm = (props) => {\n\n    return (\n        <div>\n            <Form\n                onSubmit={props.onSubmitForm}\n                render={({ handleSubmit }) => (\n                    <from onSubmit={handleSubmit}>\n                        <div>\n                            <Field name=\"newMessageBody\" \n                                    component={Textarea} \n                                    placeholder='Enter your message'\n                                    validate={validateField}\n                                     />\n                            {/* <textarea value={state.newMessageBody} onChange={onNewMessageChange} placeholder='Enter your message'></textarea> */}\n                        </div>\n                        <div>\n                            <button type=\"submit\" onClick={handleSubmit}>\n                                Send\n                            </button>\n                        </div>\n                        {/* <div>\n                            <button type=\"button\" onClick={props.onSubmitForm}>Send</button>\n                        </div> */}\n                    </from>\n                )}\n            />\n        </div>\n    )\n}\n\nexport default Dialogs","import { sendMessageCreator } from '../../redux/dialogReducer';\nimport { connect } from 'react-redux';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport Dialogs from './Dialogs';\nimport { compose } from 'redux';\n\n\nlet mapStateToProps = (state) => {\n\n    return {\n        dialogPage: state.dialogPage\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessage: (newMessageBody) => {\n            dispatch(sendMessageCreator(newMessageBody));\n        }\n    }\n}\n\nexport default compose (\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect)(Dialogs)\n\n// let AuthRedirectComponent = withAuthRedirect(Dialogs)\n\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent)\n\n// export default DialogsContainer"],"names":["props","path","id","_jsx","className","s","dialog","active","children","NavLink","to","activeClassName","activeLink","name","AddMessageForm","Form","onSubmit","onSubmitForm","render","_ref","handleSubmit","_jsxs","Field","component","Textarea","placeholder","validate","validateField","type","onClick","state","dialogPage","dialogsElements","dialogData","map","d","DialogItem","messagesElements","messageData","m","Message","message","isAuth","dialogs","dialogsItems","messages","values","sendMessage","newMessageBody","Navigate","compose","connect","dispatch","sendMessageCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}